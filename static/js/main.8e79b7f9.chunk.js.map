{"version":3,"sources":["context/AppReducer.jsx","context/GlobalState.jsx","components/AddTransaction.jsx","components/Balance.jsx","components/Header.jsx","components/IncomeExpenses.jsx","components/Transaction.jsx","components/TransactionList.jsx","App.js","index.js"],"names":["state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GLobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","AddTransaction","useContext","useState","text","setText","amount","setAmount","onSubmit","e","preventDefault","newTransaction","Math","floor","random","className","htmlFor","placeholder","onChange","target","Balance","total","map","reduce","acc","item","toFixed","Header","IncomeExpenses","amounts","income","expense","Transaction","sign","abs","onClick","TransactionList","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e79b7f9.chunk.js","sourcesContent":["export default (state, action) => {\r\n    switch(action.type) {\r\n        case 'DELETE_TRANSACTION':\r\n    return {\r\n        ...state,\r\n        transactions: state.transactions.filter(transaction => transaction.id !== action.payload)\r\n    }\r\n    case 'ADD_TRANSACTION':\r\n        return {\r\n        ...state,\r\n        transactions: [action.payload, ...state.transactions]\r\n        }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n//reducer is just a way to change your state and send it down to the components","import AppReducer from \"./AppReducer\";\r\nimport React, { createContext, useReducer } from \"react\";\r\n\r\n//Initial State\r\nconst initialState = {\r\n    transactions: []\r\n}\r\n\r\n//Create context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n//Provider Component\r\nexport const GLobalProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n    // Actions that make call to the reducer\r\n    //payload is any data to be sent \r\n    function deleteTransaction(id) {\r\n    dispatch({\r\n        type: 'DELETE_TRANSACTION',\r\n        payload: id\r\n    });\r\n    }\r\n\r\n    function addTransaction(transaction) {\r\n    dispatch({\r\n        type: 'ADD_TRANSACTION',\r\n        payload: transaction\r\n    });\r\n    }\r\n\r\n    return (<GlobalContext.Provider value={{\r\n        transactions: state.transactions,\r\n        deleteTransaction,\r\n        addTransaction\r\n    }}>\r\n        {children}\r\n        </GlobalContext.Provider>);\r\n}","import React, { useState, useContext } from 'react';\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\n\r\nconst AddTransaction = () => {\r\n\r\n    //taking the delete transaction from the globalstate \r\n    const { addTransaction } = useContext(GlobalContext);\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n    \r\n        const newTransaction = {\r\n            id: Math.floor(Math.random() * 100000000),\r\n            text,\r\n            amount: +amount\r\n        }// +amount to make the amount into a number and not a string\r\n    \r\n        addTransaction(newTransaction);\r\n    }\r\n\r\n\r\n\r\n    const [text, setText] = useState(\"\");\r\n    const [amount, setAmount] = useState(0);\r\n\r\n    return (\r\n        <>\r\n            <h3>Add new transaction</h3>\r\n            <form\r\n            onSubmit={onSubmit}>\r\n\r\n            <div className=\"form-control\">\r\n\r\n                <label \r\n                htmlFor=\"text\"\r\n                >Text</label>\r\n\r\n                <input \r\n                type=\"text\"  \r\n                placeholder=\"Enter text...\"\r\n                value={text}\r\n                onChange={ e => setText(e.target.value)}//on change so whenever we change it needs to update that piece\r\n                //of state. call a function and setText state to the event happening\r\n                />\r\n            </div>\r\n\r\n            <div \r\n            className=\"form-control\">\r\n\r\n                <label \r\n                htmlFor=\"amount\"\r\n                >Amount \r\n                <br/>\r\n                (negative - expense, positive - income)</label\r\n                >\r\n\r\n                <input \r\n                type=\"number\" \r\n                placeholder=\"Enter amount...\" \r\n                value={amount}\r\n                onChange={ e => setAmount(e.target.value)} \r\n                />\r\n            </div>\r\n\r\n            <button \r\n            className=\"btn\"\r\n            >Add transaction</button>\r\n\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default AddTransaction;","import React, {useContext} from 'react';\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nconst Balance = () => {\r\n\r\n    //destructuring context \r\n    const { transactions } = useContext(GlobalContext);\r\n    //console.log(transactions)\r\n\r\n    //looping through the global state and getting the amount\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n\r\n    const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n\r\n\r\n    return (\r\n        <>\r\n            <h4>Your Balance</h4>\r\n            <h1>{total}</h1>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default Balance;","import React from 'react';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <h2>\r\n            Expense Tracker\r\n        </h2>\r\n    );\r\n};\r\n\r\nexport default Header;","import React, {useContext} from 'react';\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nconst IncomeExpenses = () => {\r\n\r\n    //destructuring context \r\n    const { transactions } = useContext(GlobalContext);\r\n\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n\r\n\r\n    const income = amounts\r\n    .filter(item => item > 0)\r\n    .reduce((acc, item) => (acc += item), 0)\r\n    .toFixed(2);\r\n\r\n    const expense = (\r\n        amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) * -1\r\n    ).toFixed(2);\r\n\r\n\r\n    return (\r\n        <div className=\"inc-exp-container\">\r\n            <div>\r\n                <h4>Income</h4>\r\n                <p className=\"money plus\">{income}</p>\r\n            </div>\r\n            <div>\r\n                <h4>Expense</h4>\r\n                <p className=\"money minus\">{expense}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default IncomeExpenses;","import React, {useContext} from 'react';\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nconst Transaction = ({transaction}) => {\r\n    //taking the delete transaction from the globalstate \r\n    const { deleteTransaction } = useContext(GlobalContext);\r\n\r\n    const sign = transaction.amount < 0 ? \"-\" : \"+\";\r\n\r\n    return (\r\n        //the css has class of minus for red and plus for green, ternary to make it dynamic\r\n        <li className={transaction.amount < 0 ? \"minus\" : \"plus\"}>\r\n            {transaction.text} \r\n            <span>{sign}${Math.abs(transaction.amount)}</span>\r\n            <button \r\n            className=\"delete-btn\"\r\n            onClick={ () => deleteTransaction(transaction.id)}\r\n            >x</button>\r\n        </li>\r\n    );\r\n};\r\n\r\nTransaction.propTypes = {};\r\n\r\nexport default Transaction;","import React, {useContext} from 'react';\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nimport Transaction from './Transaction';\r\n\r\nconst TransactionList = () => {\r\n    //destructuring context \r\n    const { transactions } = useContext(GlobalContext);\r\n    //console.log(transactions)\r\n\r\n    return (\r\n        <>\r\n            <h3>History</h3>\r\n            <ul  className=\"list\">\r\n                {\r\n                    transactions.map( transaction => (\r\n                    <Transaction key={transaction.id} transaction={transaction} />\r\n                ))}\r\n                \r\n            </ul>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TransactionList;","import './App.css';\nimport AddTransaction from './components/AddTransaction';\nimport Balance from './components/Balance';\nimport Header from './components/Header';\nimport IncomeExpenses from './components/IncomeExpenses';\nimport TransactionList from './components/TransactionList';\nimport { GLobalProvider } from \"./context/GlobalState\";\n\n\nfunction App() {\n  return (\n    <GLobalProvider>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </GLobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}